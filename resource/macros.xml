<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
	This file is part of the DITA Validator project.
	See the accompanying LICENSE file for applicable licenses.
-->
<antlib xmlns:if="ant:if" xmlns:unless="ant:unless">






	<macrodef name="get-validation-rulesets">
		<attribute name="file" default="${svrl.customization.dir}/../cfg/ruleset/${args.validate.ruleset}.xml"/>
		<attribute name="fatal"/>
		<attribute name="error"/>
		<attribute name="warning"/>
		<sequential>
			<local name="fatal.ruleset"/>
			<local name="error.ruleset"/>
			<local name="warning.ruleset"/>

			<tempfile destdir="${dita.temp.dir}" property="fatal.ruleset" deleteonexit="true"/>
			<tempfile destdir="${dita.temp.dir}" property="error.ruleset" deleteonexit="true"/>
			<tempfile destdir="${dita.temp.dir}" property="warning.ruleset" deleteonexit="true"/>

			<xslt style="${dita.plugin.com.here.validate.svrl.dir}/xsl/ruleset2regex.xsl"
				 in="@{file}" out="${fatal.ruleset}"
				 classpathref="dost.class.path">
				<param name="LEVEL" expression="fatal"/>
			</xslt>
			<xslt style="${dita.plugin.com.here.validate.svrl.dir}/xsl/ruleset2regex.xsl"
				 in="@{file}" out="${error.ruleset}"
				 classpathref="dost.class.path">
				<param name="LEVEL" expression="error"/>
			</xslt>
			<xslt style="${dita.plugin.com.here.validate.svrl.dir}/xsl/ruleset2regex.xsl"
				 in="@{file}" out="${warning.ruleset}"
				 classpathref="dost.class.path">
					<param name="LEVEL" expression="warning"/>
			</xslt>

			<loadfile property="@{fatal}" srcfile="${fatal.ruleset}" failonerror="true"/>
			<loadfile property="@{error}" srcfile="${error.ruleset}" failonerror="true"/>
			<loadfile property="@{warning}" srcfile="${warning.ruleset}" failonerror="true"/>

		</sequential>

	</macrodef>


		<!--
		Add ansi color tags to output if requested.

		@param message - The string to colorize
	-->
	<scriptdef name="svrl-result-echo" language="javascript">
		<attribute name="message"/>
		<![CDATA[
			var escape = String.fromCharCode(27);
			var lf = String.fromCharCode(10);
			var input = attributes.get("message");

			var colorize = project.getProperty("com.here.validate.svrl.color");

			if (colorize) {
				input = input.replaceAll( "\\[FATAL" , escape + "[31m[FATAL");
				input = input.replaceAll( "\\[ERROR" , escape + "[31m[ERROR");
				input = input.replaceAll( "\\[WARN" , escape + "[33m[WARN");
				input = input.replaceAll( "\\[INFO" , escape + "[34m[INFO");
				input = input.replaceAll( "\\n" , escape + "[0m" + lf);
			}

			project.log(input, 1);
		]]>
	</scriptdef>
	


	<macrodef name="svrl-failure">
		<sequential>
			<dita-ot-fail id="SVRL001F"  unless:set="otversion.legacy">
				<param name="1" value="Errors detected during validation"/>
			</dita-ot-fail>
			<fail taskname="SVRL001F" message="Errors detected during validation" if:set="otversion.legacy"/>
		</sequential>
	</macrodef>


	<macrodef name="svrl-log">
		<attribute name="id"/>
		<attribute name="message"/>
		<attribute name="level"/>
		<sequential>
			<dita-ot-echo id="@{id}" unless:set="otversion.legacy">
				<param name="1" value="@{message}"/>
			</dita-ot-echo>
			<echo taskname="@{id}" level="@{level}" message="@{message}" if:set="otversion.legacy"/>
		</sequential>
	</macrodef>
</antlib>